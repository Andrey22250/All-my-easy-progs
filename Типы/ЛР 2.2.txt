#include <string>
#include <iostream>
#include <stack>
#define MAX 25

using namespace std;

//Перевод в польскую запись
string ToOPZ(string Normal)
{
	stack<char> st;
	string newstr;	//создание новой строки
	for (int i = 0; i < Normal.size(); i++)
	{
		char c = Normal[i];
		if (isdigit(c))	//Если цифра - просто в строку
		{
			newstr += c;
		}
		else if (c == '(')	//Если открывающая скобка - в стек
			st.push(c);
		else if (c == ')')	//Если закрывающая скобка - достаём все знаки в строку и достаём скобку
		{
			while (!st.empty() && st.top() != '(')
			{
				newstr += st.top();
				st.pop();
			}
			st.pop();
			if (!st.empty())
			{
				while (st.top() == '*' || st.top() == '/')	//Проверка на наличие действия перед скобкой
				{
					newstr += st.top();
					st.pop();
					if (st.empty()) //Выход из цикла, если стек пустой
						break;
				}
			}
		}
		else if (c == '*' || c == '/')	//Если умножить/делить - тогда проверяем на повторное наличие в стеке и отправляем в стек
		{
			if (!st.empty())
			{
				if (st.top() == '*' || st.top() == '/')
				{
					newstr += st.top();
					st.pop();
				}
			}
			st.push(c);

		}
		else if (c == '+' || c == '-')	//См. выше
		{
			if (!st.empty())
			{
				while (st.top() == '*' || st.top() == '/' || st.top() == '+' || st.top() == '-')
				{
					newstr += st.top();
					st.pop();
					if (st.empty())	//Выход из цикла, если стек пустой
						break;
				}
			}
			st.push(c);
		}
	}
	while (!st.empty())	//Заносим все оставшиеся операторы из стека в выходную строку
	{
		newstr += st.top();
		st.pop();
	}
	return newstr;		//Возвращаем выражение в постфиксной записи
}

int main()
{
	setlocale(LC_ALL, "");
	string expression, result;
	cout << "Введите арефметическое выражение без пробелов: ";
	cin >> expression;
	result = ToOPZ(expression);
	cout << "\nВыражение в обратной польской записи: " << result << endl;
}