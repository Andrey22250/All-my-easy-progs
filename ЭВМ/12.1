AA		DCD		4
BB		DCD		0
CC		DCD		5
YY		FILL		4
		
		ADR		R5, AA
		LDR		R5, [R5]
		ADR		R6, BB
		LDR		R6, [R6]
		CMP		R6, #0
		BLEQ		MULTI
		BLNE		DIV
		ADR		R5, CC
		LDR		R5, [R5]
		ADD		R4, R4, R5
		ADR		R0, YY
		STR		R4, [R0]
		END
		
		;Умножение
MULTI
		MOV		R4, #0 ; R4=0
		Mov		R6, R5
MULTLOOP
		TST		R6, #1 ; проверяем младший бит множителя
		ADDNE	R4, R4, R5 ; если он равен 1, добавляем множимое к результату
		LSL		R5, R5, #1 ; сдвиг влево первого множителя
		LSRS		R6, R6, #1 ; сдвиг второго множителя вправо
		MOVEQ	PC, LR ; если второй множитель 0, возвращаемся из подпрограммы
		B		MULTLOOP ; на начало цикла
		;		Деление
DIV
		MOV		R4, #0 ; R4=0
		MOV		R7, #1 ; R7=1
		CMP		R5, #0 ; R5==0?
		RSBMI	R5, R5, #0 ; IF(R5<0) => R5==-R5
		SUBMI	R7, R7, #1 ; IF(R5<0) => R7-=1
		CMP		R6, #0 ; R6==0?
		RSBMI	R6, R6, #0 ; IF(R6<0) => R6==-R6
		SUBMI	R7, R7, #1 ; IF(R6<0) => R7-=1
DIVL00P
		SUBS		R5, R5, R6 ; вычитаем делитель из делимого
		ADDHS	R4, R4, #1 ; если делимое неотрицательно, увеличиваем счетчик результата
		BHI		DIVL00P ; если делимое неотрицательно, повторяем цикл
		CMP		R7, #0 ; сравнить R7 с нулем (0 - рещультат отрицательный)
		RSBEQ	R4, R4, #0 ; R4==-R4
		MOV		PC, LR ; возвращаемся из подпрограммы
