#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
#define N 15
/*Прототипы функций*/
int vvod(int n, int *a);
int vivod(int n, int *a);
int count(int n, int *a, int* counth, int* countl);
void clean()  //Очистка ввода
{
	while (getchar() != '\n');
}
/*Основная программа*/
int main()
{
	do
	{
		setlocale(LC_ALL, "rus");
		int matr[N][N], i, j, n, counth, countl;
		printf("Работа с матрицей указателей через функции\n\n");
		do  //Ввод размерности
		{
			printf("Введите размерность матрицы (не более 15): ");
			scanf("%d", &n);
			clean;
		} while (n<=0 || n>15);
		vvod(n, &matr[0][0]);  //Ввод матрицы
		printf("\nВы ввели матрицу:\n");
		vivod(n, &matr[0][0]);  //Вывод матрицы
		count(n, &matr[0][0], &counth, &countl);  //Обработка матрицы
		printf("\nОбработанная матрица:\n");
		vivod(n, &matr[0][0]);
		printf("\nКоличество положительных элементов выше побочной диагонали - %d\nКоличество отрицательных элементов ниже побочной диагонали - %d", counth, countl);
		printf("\n\nНажмите Enter для повтоного ввода\nНажмите Esc для выхода из программы\n\n");
	} while (_getch()!=27);
}
/*Функция ввода матрицы*/
int vvod(int n, int *a)
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		printf("%d строка: ", i + 1);
		for (j = 0; j < n; j++)
		{
			scanf("%d", a++);
		}
		clean();
	}
	return 1;
}
/*Функция вывода матрицы*/
int vivod(int n, int *a)
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
			printf("%d ", *(a+i*n+j));
		printf("\n");
	}
	return 1;
}
/*Работа с матрице и подсчёт элементов по правилам*/
int count(int n, int *a, int *counth, int *countl)
{
	int i, j;
	*counth = *countl = 0;
	for (i = 0; i<n; i++)
		for (j = n-1; j >=0 ; j--)
		{
			if ((i + j < n-1) && *(a+i*n+j)>0)
				(*counth)++;
			else if ((i + j > n-1) && *(a + i * n + j) < 0)
				(*countl)++;
			if ((i + j < n - 1) && *(a + i * n + j) < 0)
				*(a + i * n + j) = 0;
		}
	return 1;
}