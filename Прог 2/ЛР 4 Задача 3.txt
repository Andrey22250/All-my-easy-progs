#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
#define N 15
/*Прототипы функций*/
int vvod(int n, int a[][N]);
int vivod(int n, int a[][N]);
int count(int n, int a[][N], int* counth, int* countl);
void clean()  //Очистка ввода
{
	while (getchar() != '\n');
}

int main()
{
	do
	{
		setlocale(LC_ALL, "rus");
		int matr[N][N], i, j, n, counth, countl;
		printf("Работа с матрицей через функции\n\n");
		do  //Ввод размерности
		{
			printf("Введите размерность матрицы (не более 15): ");
			scanf("%d", &n);
			clean;
		} while (n <= 0 || n>15);
		vvod(n, matr);  //Ввод матрицы
		printf("\nВы ввели матрицу:\n");
		vivod(n, matr);  //Вывод матрицы
		count(n, matr, &counth, &countl);  //Обработка матрицы
		printf("\nОбработанная матрица:\n");
		vivod(n, matr);
		printf("\nКоличество положительных элементов выше побочной диагонали - %d\nКоличество отрицательных элементов ниже побочной диагонали - %d", counth, countl);
		printf("\n\nНажмите Enter для повтоного ввода\nНажмите Esc для выхода из программы\n\n");
	} while (_getch() != 27);
}
/*Функция ввода матрицы*/
int vvod(int n, int a[][N])
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		printf("%d строка: ", i + 1);
		for (j = 0; j < n; j++)
			scanf("%d", &a[i][j]);
		clean();
	}
	return 1;
}
/*Функция вывода матрицы*/
int vivod(int n, int a[][N])
{
	int i, j;
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
			printf("%d ", a[i][j]);
		printf("\n");
	}
	return 1;
}
/*Работа с матрице и подсчёт элементов по правилам*/
int count(int n, int a[][N], int* counth, int* countl)
{
	int i, j;
	*counth = *countl = 0;
	for (i = 0; i < n; i++)
		for (j = n - 1; j >= 0; j--)
		{
			if ((i + j < n - 1) && a[i][j] > 0)
				(*counth)++;
			else if ((i + j > n - 1) && a[i][j] < 0)
				(*countl)++;
			if ((i + j < n - 1) && a[i][j] < 0)
				a[i][j] = 0;
		}
	return 1;
}