#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
#include <Windows.h>
FILE* file1;
FILE* file_temp;
//Прототипы функций
int level(int n, int m, int time1);
int level_c();
int rules(int k);
int results_w(int m, float k, char c[]);
int results_r(char m);

int clean()  //Очистка потока
{
	while (getchar() != '\n');
	return 1;
}

int main()
{
	setlocale(LC_ALL, "");	//Установка русского языка
	SetConsoleCP(1251);
	char way;
	do
	{
		do
		{
			system("cls");
			printf("Числовой тренажёр памяти.\n");	//Меню
			printf("\n1 - Начать игру\n2 - Просмотр статистики\nEsc - Выход на рабочий стол\n\nВаш выбор: ");
			way = _getch();
			printf("%c", way);
			Sleep(500);
			if (way == '1')		//Нажали вход в игру
			{
				do
				{
					system("cls");
					printf("Начало игры\nВыберите уровень сложности\n1 - Человек\n2 - Охотник на демонов\n3 - Сын спарды\n4 - Данте должен умереть\n5 - Настраиваемый\nEsc - выход в главное меню\n\nВаш выбор: ");
					way = _getch();
					printf("%c", way);
					Sleep(400);
					switch (way)	//Выбор уровня сложности
					{
					case '1':
					{
						level(5, 1, 10000);
						way = 27;
					}; break;
					case '2':
					{
						level(7, 2, 9000);
						way = 27;
					}; break;
					case '3':
					{
						level(8, 3, 12000);
						way = 27;
					}; break;
					case '4':
					{
						level(10, 4, 12000);
						way = 27;
					}; break;
					case '5':
					{
						level_c();
						way = 27;
					}; break;
					default: break;
					}
				} while (way != 27);
				system("cls");
				printf("Выход в главное меню, пожалуйста подождите");
				Sleep(700);
				way = 0;
			}
			else if (way == '2')
			{
				do {
					system("cls");
					printf("Статистика\nВыберите уровень сложности\n1 - Человек\n2 - Охотник на демонов\n3 - Сын спарды\n4 - Данте должен умереть\nEsc - выход в главное меню\n\nВаш выбор: ");
					way = _getch();
					printf("%c", way);
					Sleep(400);
					switch (way)
					{
					case '1':
					{
						results_r(1);
						way = 27;
					}; break;
					case '2':
					{
						results_r(2);
						way = 27;
					}; break;
					case '3':
					{
						results_r(3);
						way = 27;
					}; break;
					case '4':
					{
						results_r(4);
						way = 27;
					}; break;
					default: break;
					}
				} while (way != 27);
				system("cls");
				printf("Выход в главное меню, пожалуйста подождите");
				Sleep(700);
				way = 0;
			}
		} while (way != 27);	//Выход из программы
		Sleep(50);
		system("cls");
		printf("Вы уверены, что хотите выйти из программы?\n\nEnter - да\nEsc - отмена\n");
	} while (_getch() != 13);
}

int rules(int k)	//Вывод правил
{
	int count;
	switch (k)
	{
	case 1: count = 5; break;
	case 2: count = 7; break;
	case 3: count = 8; break;
	case 4: count = 10; break;
	}
	printf("Выбран уровень сложности - %d", k);
	printf("\n\nПравила игры:\nБудут показаны %d различных чисел.\nВаша задача - постараться запомнить все числа и записать их в предложенной форме.\
	\nЧисла можно записывать в любом порядке. Если вы не запомнили число - вводите в строку 0 (ноль).\nПо окончании тестирования будет выведена ваша оценка в процентах\n", count);
	return 1;
}

int level(int n, int m, int time1)		//Уровни, параметры в main
{
	char way, nickname[25], file[25];
	int a[10], b[10], i, check, j, flag, razr;
	float result;
	Sleep(500);
	system("cls");
	rules(m);
	printf("Время на запоминание - %d секунд.\n", time1/1000);
	printf("\nНажмите Enter для начала игры: ");
	way = _getch();
	razr = pow(10, m);
	if (way == 13)	//Нажали старт
	{
		srand(time(NULL));	//Создание рандомных чисел
		for (i = 0; i < n; i++)
		{
			a[i] = razr / 10 + rand() % razr;
			if (a[i] > razr - 1)
				a[i] -= razr / 10;
			if (a[i] == 0)
				a[i] += 1;
		}
		system("cls");
		printf("Ваши числа:\n\n");
		Sleep(300);
		for (i = 0; i < n; i++)
		{
			printf("%d\n", a[i]);
		}
		Sleep(time1);	//Временный вывод чисел
		system("cls");
		printf("Время вышло, пора вводить числа!\n");
		for (i = 0; i < n; i++)		//Ввод чисел
		{
			do
			{
				printf("%d число: ", i + 1);
				check = scanf("%d", &b[i]);
				clean();
			} while (check != 1);
		}
		check = 0;		//Сравнение чисел между собой с флагом
		for (i = 0; i < n; i++)
			for (j = 0, flag = 0; j < n && flag == 0; j++)
				if (b[i] == a[j])
				{
					check++;
					flag = 1;
					a[j] = -1;
				}
		result = 100.0 * check / n;
		system("cls");
		printf("Ваш итоговый результат - %.2f%%", result);		//Вывод результата и запись в файл
		do {
			printf("\n\nХотите записать ваш результат в файл?\n\n1 - Да\n2 - Нет");
			way = _getch();
		} while (way != '1' && way != '2');
		if (way == '1')
		{
			Sleep(300);
			system("cls");
			printf("Введите никнейм: ");
			fgets(nickname, 10, stdin);
			if (nickname[strlen(nickname) - 1] == '\n')
				nickname[strlen(nickname) - 1] = '\0';
			strcpy(file, "users/");
			strcat(file, nickname);
			strcat(file, ".txt"); //Задание имени файла
			results_w(m, result, nickname);
			file1 = fopen(file, "w");
			if (file1 == NULL)
			{
				system("cls");
				printf("Ошибка записи в файл");
				Sleep(1500);
				return -1;
			}
			fprintf(file1, "Ваш итоговый результат - %.2f%%\nСложность - %d", result, m);
			Sleep(500);
			system("cls");
			printf("Файл успешно записан");
			Sleep(800);
			fclose(file1);
			
		}
	}
	return 1;
}

int level_c()
{
	char way, nickname[10], file[25];
	int a[100], b[100], i, check, j, flag, n, razr, time1;
	float result;
	Sleep(500);
	system("cls");
	printf("Выбран уровень сложности - 5");
	printf("\n\nПравила игры:\nБудут показаны различные числа.\nВаша задача - постараться запомнить все числа и записать их в предложенной форме.\
	\nЧисла можно записывать в любом порядке. Если вы не запомнили число - вводите в строку 0 (ноль).\nПо окончании тестирования будет выведена ваша оценка в процентах\n");
	printf("\nНажмите Enter для настройки игры: ");
	way = _getch();
	if (way == 13)
	{
		do		//Выбор кол-ва чисел
		{
			system("cls");
			printf("Введите кол-во чисел: ");
			check = scanf("%d", &n);
			Sleep(300);
		} while ((n < 0 || n>100) && check != 1);
		do		//Выбор разрядности числа
		{
			system("cls");
			printf("Введите кол-во цифр в числе: ");
			check = scanf("%d", &razr);
			Sleep(300);
		} while ((razr < 0 || razr>15) && check != 2);
		do		//Выбор режима запоминания
		{
			system("cls");
			printf("Выберите временной режим:\n\n1 - По таймеру\n2 - По готовности");
			way = _getch();
			Sleep(300);
		} while (way != '1' && way != '2');
		if (way == '1')
			do		//Ввод времени
			{
				system("cls");
				printf("Введите время в секундах: ");
				check = scanf("%d", &time1);
			} while ((time1 < 0 || time1>100) && check != 1);
			razr = pow(10, razr);
			srand(time(NULL));
			for (i = 0; i < n; i++)		//Создание случайных чисел
			{
				a[i] = razr / 10 + rand() % razr;
				if (a[i] > razr - 1)
					a[i] -= razr / 10;
				if (a[i] == 0)
					a[i] += 1;
			}
			system("cls");
			printf("Ваши числа:\n\n"); //Вывод чисел
			Sleep(200);
			for (i = 0; i < n; i++)
			{
				printf("%d\n", a[i]);
			}
			if (way == '2')
			{
				printf("\nНажмите любую клавишу для начала");
				way = _getch();
			}
			else if (way == '1')
				Sleep(time1 * 1000);
			system("cls");
			printf("Пора вводить числа!\n");
			for (i = 0; i < n; i++)
			{
				do
				{
					printf("%d число: ", i + 1);
					check = scanf("%d", &b[i]);
					clean();
				} while (check != 1);
			}
			check = 0;
			for (i = 0; i < n; i++)
				for (j = 0, flag = 0; j < n && flag == 0; j++)
					if (b[i] == a[j])
					{
						check++;
						flag = 1;
						a[j] = -1;
					}
			result = 100.0 * check / n ;
			system("cls");
			printf("Ваш итоговый результат - %.2f%%", result);
			do {
				printf("\n\nХотите записать ваш результат в файл?\n\n1 - Да\n2 - Нет");
				way = _getch();
			} while (way != '1' && way != '2');
			if (way == '1')
			{
				Sleep(300);
				system("cls");
				printf("Введите никнейм: ");
				fgets(nickname, 10, stdin);
				if (nickname[strlen(nickname) - 1] == '\n')
					nickname[strlen(nickname) - 1] = '\0';
				strcpy(file, "users/");
				strcat(file, nickname);
				strcat(file, ".txt");
				file1 = fopen(file, "w");
				if (file1 == NULL)
				{
					system("cls");
					printf("Ошибка записи в файл");
					Sleep(1500);
					return -1;
				}
				fprintf(file1, "Ваш итоговый результат - %.2f%%\nСложность - Настраиваемая", result);
				Sleep(500);
				system("cls");
				printf("Файл успешно записан");
				printf("\n\nНажмите любую клавишу для выхода в меню");
				way = _getch();
				Sleep(800);
				fclose(file1);
			}
	}
	return 1;
}

int results_w(int m, float k, char c[])
{
	char file[20], way, temp[50], cp;
	int count, i;
	strcpy(file, "results/level");
	file[13] = m + 48;
	file[14] = '\0';
	strcat(file, ".txt");
	file1 = fopen(file, "r");
	if (file1 == NULL)
	{
		system("cls");
		printf("Ошибка чтения файла последних игр. Хотите его создать заново?\n1 - Да\n2 - Нет");
		way = _getch();
		if (way == '1')
		{
			file1 = fopen(file, "w");
			fprintf(file1, "0\n");
			fclose(file1);
			file1 = fopen(file, "r");
		}
		else
			return -1;

	}
	fscanf(file1, "%d\n", &count);
	file_temp = fopen("results/level_t.txt", "w");
	cp = fgetc(file1);
	while (cp != EOF)
	{
		fputc(cp, file_temp);
		cp = fgetc(file1);
	}
	fclose(file1);
	fclose(file_temp);
	file1 = fopen(file, "w");
	file_temp = fopen("results/level_t.txt", "r");
	if (count < 5)
	{
		fprintf(file1, "%d\n", count + 1);
		fprintf(file1, "%.2f;%s\n", k, c);
		cp = fgetc(file_temp);
		while (cp != EOF)
		{
			fputc(cp, file1);
			cp = fgetc(file_temp);
		}
	}
	else
	{
		fprintf(file1, "5\n");
		fprintf(file1, "%.2f;%s\n", k, c);
		for (i = 0; i < 4; i++)
		{
			fgets(temp, 30, file_temp);
			fputs(temp, file1);
		}
	}
	fclose(file1);
	fclose(file_temp);
	remove("results/level_t.txt");
	return 1;
}

int results_r(char m)
{
	system("cls");
	char file[20], way, temp[50];
	int count, i;
	float temp1;
	strcpy(file, "results/level");
	file[13] = m + 48;
	file[14] = '\0';
	strcat(file, ".txt");
	file1 = fopen(file, "r");
	if (file1 == NULL)
	{
		printf("Ошибка чтения файла последних игр. Хотите его создать заново?\n1 - Да\n2 - Нет");
		way = _getch();
		if (way == '1')
		{
			file1 = fopen(file, "w");
			fprintf(file1, "0\n");
			fclose(file1);
			file1 = fopen(file, "r");
		}
		else
			return -1;
	}
	fscanf(file1, "%d\n", &count);
	system("cls");
	if (count > 0)
	{
		printf("Последние игры:\n\n");
		printf("Результат   Никнейм\n");
		for (i = 0; i < count; i++)
		{
			fscanf(file1, "%f;", &temp1);
			fgets(temp, 50, file1);
			printf("%-12.2f%s", temp1, temp);
		}
	}
	else
	{
		printf("Ошибка. Нет предыдущих игр");
	}
	printf("\n\nНажмите любую клавишу для выхода в меню");
	way = _getch();
	fclose(file1);
	return 1;
}