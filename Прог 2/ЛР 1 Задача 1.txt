#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <conio.h>
#include <string.h>

#define max_words 650
#define max_len 1000
#define max_word_len 1000

int main()
{
	setlocale(LC_ALL, "rus");
	/*words - массив слов, text - исходная строка, word_count - счётчик слов*/
	char words[max_words][max_word_len], text[max_len];
	int i, j, m, len, n = 0, flag;
	int word_count[max_words];
	printf("Частота слова в тексте. Стандартные функции.\n");
	do
	{
		/*Ввод текста*/
		printf("Введите текст посимвольно (конец строки - Enter): ");
		for (i = len = 0; text[i - 1] != '\n' && len < max_len; i++, len++)
		{
			scanf("%c", &text[i]);
		}
		/*Вывод введённого текста*/
		printf("\nВы ввели текст: ");
		for (i = 0; i < len; i++)
		{
			printf("%c", text[i]);
		}
		/*Понижение регистра*/
		for(i=0;i<len;i++)
			if (int(text[i])>64&& int(text[i])<=90)
			{
				text[i] = int(text[i]) + 32;
			}
		/*Замена всех разделителей на пробелы*/
		for (i = 0; i < len - 1; i++)
		{
			if (text[i] == ',' || text[i] == '.' || text[i] == '!' || text[i] == '?' || text[i] == ':' || text[i] == '-')
				text[i] = ' ';
		}
		if (len == max_len && text[len - 1] != '\n')  //Если длина строки больше max_len, то последний символ меняем на \n
			text[len - 1] = '\n';
		/*Выделение слов в отдельный массив из исходной строки*/
		n = 0;
		for (i = 0; text[n - 1] != '\n'; i++, n++)
		{
			for (j = 0; n < len && text[n] != ' ' && text[n] != '\n'; j++, n++)
			{
				words[i][j] = text[n];
				words[i][j + 1] = ' ';
			}
			if ((text[n] == ' ' && ' ' == text[n + 1]) || text[n + 1] == '\n')
				i--;
			j = 0;
		}
		if (text[0] == ' ' || text[0] == '\n') //Защита от ввода пустой строки или строки разделителей
			words[0][0] = '\0';
		for (n = 0; n < i; n++)  //Задание изначального массива для счёта кол-ва слов
			word_count[n] = 1;
		/*Замена последнего символа из строки на \0*/
		for (i = 0; i < n; i++)
		{
			for (j = 0; words[i][j] != '\0'; j++)
			{
				if (words[i][j + 1] == ' ')
					words[i][j + 1] = '\0';
			}
			j = 0;
		}
		/*Сравнение двух слов посимвольно + если слова совпали - добавляем к счётчику 1 и обнуляем строку*/
		for (i = 0; i < n; i++)
		{
			for (j = i + 1; j < n; j++)
			{
				for (len = 0, m = 0, flag = 0; words[i][len] != '\0' || words[j][m] != '\0'; len++, m++)
				{
					if (words[i][len] == words[j][m])
						flag += 1;
					if (words[i][len] == '\0')
						len--;
					if (words[j][m] == '\0')
						m--;
				}
				if (flag == len && len == m && words[j][0] != '\0')
				{
					words[j][0] = '\0';
					word_count[j] = '\0';
					word_count[i] += 1;
				}
			}
		}
		/*Вывод слов*/
		printf("\nСлова:");
		for (i = 0; i < n; i++)
		{
			printf("\n");
			for (j = 0; words[i][j] != '\0'; j++)
			{
				printf("%c", words[i][j]);
			}
			if (words[i][0] != '\0')
				printf(" - %d", word_count[i]);
			while (words[i + 1][0] == '\0' && i < n) //Если \0, то идём к следующему слову
				i++;
		}
		if (words[0][0] == '\0' && i == 1)  //Вывод защиты от дурака
			printf("Ошибка. Введена неверная строка.");
		printf("\n\nНажмите Enter для повторного запуска программы\nНажмите Esc для выхода из программы\n\n");
	} while (_getch() != 27); //Выход из программы, если нажат Esc 
}